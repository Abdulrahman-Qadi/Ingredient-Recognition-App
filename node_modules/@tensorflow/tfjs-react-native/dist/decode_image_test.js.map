{"version":3,"file":"decode_image_test.js","sourceRoot":"","sources":["../src/decode_image_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,MAAM,EAAE,SAAS,EAAC,MAAM,uBAAuB,CAAC;AACxD,iDAAiD;AACjD,OAAO,EAAC,iBAAiB,EAAC,MAAM,yCAAyC,CAAC;AAE1E,OAAO,KAAK,EAAE,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAC,OAAO,EAAC,MAAM,qBAAqB,CAAC;AAE5C,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC;IAChC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,GAAG,EAAE,CAAC,EAAI,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG;IACzE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACvE,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE;IACxE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,CAAC;IACvE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,GAAG;IACzE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,GAAG;IACzE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE;IACxE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE;IACxE,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG;IACzE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACxE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,CAAC,EAAI,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACvE,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG;IACzE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,EAAE,EAAG,GAAG;IACzE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,EAAE;IACxE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG;IACzE,GAAG,EAAE,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,GAAG,EAAE,CAAC,EAAI,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,EAAE;IACxE,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;IACvE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG;IACzE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG;CACvC,CAAC,CAAC;AAEH,iBAAiB,CAAC,eAAe,EAAE,OAAO,EAAE,GAAG,EAAE;IAC/C,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;QAC1B,MAAM,gBAAgB,GAAW,MAAM,EAAE,CAAC,UAAU,CAAC;QACrD,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,SAAS,CAAC,iBAAiB,CACvB,MAAM,WAAW,CAAC,IAAI,EAAE,EACxB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {memory, test_util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport * as tf from './index';\nimport {RN_ENVS} from './test_env_registry';\n\nconst uint8array = new Uint8Array([\n  255, 216, 255, 224, 0,   16,  74,  70,  73,  70,  0,   1,   1,   2,   0,\n  118, 0,   118, 0,   0,   255, 219, 0,   67,  0,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   255,\n  219, 0,   67,  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,\n  1,   1,   1,   1,   1,   1,   1,   1,   255, 194, 0,   17,  8,   0,   2,\n  0,   2,   3,   1,   17,  0,   2,   17,  1,   3,   17,  1,   255, 196, 0,\n  20,  0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   0,   7,   255, 196, 0,   20,  1,   1,   0,   0,   0,   0,   0,\n  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   255, 218, 0,   12,\n  3,   1,   0,   2,   16,  3,   16,  0,   0,   1,   50,  53,  173, 255, 0,\n  255, 196, 0,   21,  16,  1,   1,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   0,   0,   0,   0,   5,   4,   255, 218, 0,   8,   1,   1,   0,\n  1,   5,   2,   60,  195, 104, 131, 255, 196, 0,   25,  17,  0,   3,   1,\n  1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   3,\n  4,   5,   1,   0,   255, 218, 0,   8,   1,   3,   1,   1,   63,  1,   159,\n  15,  18,  201, 209, 93,  120, 249, 117, 87,  82,  85,  77,  85,  83,  159,\n  35,  232, 166, 135, 128, 181, 207, 123, 154, 162, 99,  156, 230, 17,  49,\n  173, 97,  17,  176, 200, 136, 139, 165, 222, 247, 223, 255, 196, 0,   26,\n  17,  0,   3,   1,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   1,   2,   3,   4,   5,   35,  0,   255, 218, 0,   8,   1,   2,\n  1,   1,   63,  1,   29,  110, 166, 80,  51,  102, 233, 116, 51,  230, 207,\n  225, 159, 60,  54,  104, 148, 33,  9,   121, 202, 49,  148, 232, 169, 41,\n  73,  21,  82,  115, 69,  8,   136, 2,   168, 0,   1,   247, 255, 196, 0,\n  25,  16,  0,   3,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   0,   1,   2,   3,   4,   0,   5,   255, 218, 0,   8,   1,   1,\n  0,   6,   63,  2,   197, 163, 71,  159, 134, 247, 190, 76,  214, 189, 237,\n  146, 21,  181, 173, 88,  163, 210, 181, 163, 161, 122, 82,  142, 75,  187,\n  185, 44,  204, 75,  49,  36,  247, 255, 196, 0,   21,  16,  1,   1,   0,\n  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,\n  255, 218, 0,   8,   1,   1,   0,   1,   63,  33,  85,  47,  2,   3,   60,\n  155, 126, 1,   191, 255, 218, 0,   12,  3,   1,   0,   2,   0,   3,   0,\n  0,   0,   16,  223, 255, 196, 0,   20,  17,  1,   0,   0,   0,   0,   0,\n  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   255, 218, 0,   8,\n  1,   3,   1,   1,   63,  16,  117, 250, 0,   169, 238, 184, 84,  212, 255,\n  196, 0,   21,  17,  1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   0,   0,   0,   1,   17,  255, 218, 0,   8,   1,   2,   1,   1,\n  63,  16,  8,   234, 1,   198, 37,  68,  148, 101, 31,  255, 196, 0,   20,\n  16,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n  0,   0,   1,   255, 218, 0,   8,   1,   1,   0,   1,   63,  16,  111, 197,\n  200, 77,  239, 120, 73,  43,  255, 217\n]);\n\ndescribeWithFlags('decode images', RN_ENVS, () => {\n  it('decode jpg', async () => {\n    const beforeNumTensors: number = memory().numTensors;\n    const imageTensor = await tf.decodeJpeg(uint8array);\n    expect(imageTensor.dtype).toBe('int32');\n    expect(imageTensor.shape).toEqual([2, 2, 3]);\n    test_util.expectArraysEqual(\n        await imageTensor.data(),\n        [240, 100, 0, 50, 50, 50, 99, 49, 0, 199, 99, 49]);\n    expect(memory().numTensors).toBe(beforeNumTensors + 1);\n  });\n});\n"]}