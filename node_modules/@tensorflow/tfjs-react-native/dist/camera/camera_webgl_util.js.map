{"version":3,"file":"camera_webgl_util.js","sourceRoot":"","sources":["../../src/camera/camera_webgl_util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {webgl_util} from '@tensorflow/tfjs-backend-webgl';\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport * as drawTextureProgramInfo from './draw_texture_program_info';\nimport * as resizeBilinearProgramInfo from './resize_bilinear_program_info';\nimport * as resizeNNProgramInfo from './resize_nearest_neigbor_program_info';\nimport {Rotation} from './types';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n  depth: number;\n}\n\n// Shared cached frameBuffer object from external context\nconst fboCache = new WeakMap<WebGL2RenderingContext, WebGLFramebuffer>();\n\n// Internal target texture used for resizing camera texture input\nconst resizeTextureCache = new WeakMap<WebGL2RenderingContext, WebGLTexture>();\nconst resizeTextureDimsCache =\n    new WeakMap<WebGL2RenderingContext, {width: number, height: number}>();\n\ninterface ProgramObjects {\n  program: WebGLProgram;\n  vao: WebGLVertexArrayObject;\n  vertices: Float32Array;\n  uniformLocations: Map<string, WebGLUniformLocation>;\n}\n\n// Cache for shader programs and associated vertex array buffers.\nconst programCacheByContext:\n    WeakMap<WebGL2RenderingContext, Map<string, ProgramObjects>> =\n        new WeakMap();\n\n/**\n * Download data from an texture.\n *\n * @param gl\n * @param texture\n * @param dims\n */\nexport function downloadTextureData(\n    gl: WebGL2RenderingContext, texture: WebGLTexture,\n    dims: Dimensions): Uint8Array {\n  const {width, height, depth} = dims;\n  const pixels = new Uint8Array(width * height * depth);\n\n  if (!fboCache.has(gl)) {\n    fboCache.set(gl, createFrameBuffer(gl));\n  }\n  const fbo = fboCache.get(gl);\n\n  webgl_util.callAndCheck(gl, () => {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  });\n\n  webgl_util.callAndCheck(gl, () => {\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n  });\n\n  webgl_util.callAndCheck(gl, () => {\n    const level = 0;\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, level);\n  });\n\n  webgl_util.callAndCheck(gl, () => {\n    const format = depth === 3 ? gl.RGB : gl.RGBA;\n    const x = 0;\n    const y = 0;\n    gl.readPixels(x, y, width, height, format, gl.UNSIGNED_BYTE, pixels);\n  });\n\n  // Unbind framebuffer\n  webgl_util.callAndCheck(gl, () => {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  });\n  return pixels;\n}\n\n/**\n * Upload image data to a texture.\n *\n * @param imageData data to upload\n * @param gl gl context to use\n * @param dims image size\n * @param texture optional texture to upload data to. If none is passed a new\n *     texture will be returned\n */\nexport function uploadTextureData(\n    imageData: Uint8Array, gl: WebGL2RenderingContext, dims: Dimensions,\n    texture?: WebGLTexture): WebGLTexture {\n  const targetTextureWidth = dims.width;\n  const targetTextureHeight = dims.height;\n\n  tf.util.assert(\n      targetTextureWidth * targetTextureHeight * dims.depth ===\n          imageData.length,\n      () => 'uploadTextureData Error: imageData length must match w * h * d');\n\n  const targetTexture = texture || gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, targetTexture);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n  const level = 0;\n  const format = dims.depth === 3 ? gl.RGB : gl.RGBA;\n  const internalFormat = format;\n  const border = 0;\n  const type = gl.UNSIGNED_BYTE;\n\n  webgl_util.callAndCheck(gl, () => {\n    gl.texImage2D(\n        gl.TEXTURE_2D, level, internalFormat, targetTextureWidth,\n        targetTextureHeight, border, format, type, imageData);\n  });\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return targetTexture;\n}\n\n/**\n * Render a texture to the default framebuffer (i.e. screen)\n *\n * @param gl WebGL context to use\n * @param texture texture to render\n * @param dims texture size\n */\nexport function drawTexture(\n    gl: WebGL2RenderingContext, texture: WebGLTexture,\n    dims: {width: number, height: number}, flipHorizontal: boolean,\n    rotation: Rotation) {\n  const {program, vao, vertices, uniformLocations} =\n      drawTextureProgram(gl, flipHorizontal, false, rotation);\n  gl.useProgram(program);\n  gl.bindVertexArray(vao);\n\n  // Set texture sampler uniform\n  const TEXTURE_UNIT = 0;\n  gl.uniform1i(uniformLocations.get('inputTexture'), TEXTURE_UNIT);\n  gl.activeTexture(gl.TEXTURE0 + TEXTURE_UNIT);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Draw to screen\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.viewport(0, 0, dims.width, dims.height);\n  // gl.clearColor(1, 1, 0, 1);\n  // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n\n  gl.bindVertexArray(null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.useProgram(null);\n}\n\nexport function runResizeProgram(\n    gl: WebGL2RenderingContext, inputTexture: WebGLTexture,\n    inputDims: Dimensions, outputDims: Dimensions, alignCorners: boolean,\n    useCustomShadersToResize: boolean,\n    interpolation: 'nearest_neighbor'|'bilinear', rotation: Rotation) {\n  const {program, vao, vertices, uniformLocations} = useCustomShadersToResize ?\n      resizeProgram(gl, inputDims, outputDims, alignCorners, interpolation) :\n      drawTextureProgram(gl, false, true, rotation);\n  gl.useProgram(program);\n  // Set up geometry\n  webgl_util.callAndCheck(gl, () => {\n    gl.bindVertexArray(vao);\n  });\n\n  //\n  // Set up input texture\n  //\n  gl.uniform1i(uniformLocations.get('inputTexture'), 1);\n  gl.activeTexture(gl.TEXTURE0 + 1);\n  gl.bindTexture(gl.TEXTURE_2D, inputTexture);\n  if (!useCustomShadersToResize) {\n    const textureFilter =\n        interpolation === 'nearest_neighbor' ? gl.NEAREST : gl.LINEAR;\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, textureFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, textureFilter);\n  }\n\n  //\n  // Set up output texture.\n  //\n  if (!resizeTextureCache.has(gl)) {\n    resizeTextureCache.set(gl, gl.createTexture());\n  }\n  const resizeTexture = resizeTextureCache.get(gl);\n\n  const targetTexture = resizeTexture;\n  const targetTextureWidth = outputDims.width;\n  const targetTextureHeight = outputDims.height;\n\n  gl.activeTexture(gl.TEXTURE0 + 2);\n  gl.bindTexture(gl.TEXTURE_2D, targetTexture);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n  // Reallocate texture storage if target size has changed.\n  if (!resizeTextureDimsCache.has(gl)) {\n    resizeTextureDimsCache.set(gl, {width: -1, height: -1});\n  }\n  const resizeTextureDims = resizeTextureDimsCache.get(gl);\n\n  if (resizeTextureDims == null ||\n      resizeTextureDims.width !== targetTextureWidth ||\n      resizeTextureDims.height !== targetTextureHeight) {\n    const level = 0;\n    const format = outputDims.depth === 3 ? gl.RGB : gl.RGBA;\n    const internalFormat = format;\n    const border = 0;\n    const type = gl.UNSIGNED_BYTE;\n\n    webgl_util.callAndCheck(gl, () => {\n      gl.texImage2D(\n          gl.TEXTURE_2D, level, internalFormat, targetTextureWidth,\n          targetTextureHeight, border, format, type, null);\n    });\n\n    resizeTextureDimsCache.set(\n        gl, {width: targetTextureWidth, height: targetTextureHeight});\n  }\n\n  //\n  // Render to output texture\n  //\n  if (!fboCache.has(gl)) {\n    fboCache.set(gl, createFrameBuffer(gl));\n  }\n  const fbo = fboCache.get(gl);\n\n  gl.viewport(0, 0, targetTextureWidth, targetTextureHeight);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, targetTexture, 0);\n\n  const fboComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  if (fboComplete !== gl.FRAMEBUFFER_COMPLETE) {\n    switch (fboComplete) {\n      case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n        throw new Error(\n            'createFrameBuffer: gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT');\n\n      case gl.FRAMEBUFFER_UNSUPPORTED:\n        throw new Error('createFrameBuffer: gl.FRAMEBUFFER_UNSUPPORTED');\n\n      case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n        throw new Error(\n            'createFrameBuffer: gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT');\n\n      case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n        throw new Error(\n            'createFrameBuffer: gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS');\n\n      case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n        throw new Error(\n            'createFrameBuffer: gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE');\n      default:\n        throw new Error(\n            'createFrameBuffer Error: Other or unknown fbo complete status: ' +\n            `${fboComplete}`);\n    }\n  }\n\n  gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n\n  // Restore previous state\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.useProgram(null);\n  gl.bindVertexArray(null);\n  return targetTexture;\n}\n\nfunction createFrameBuffer(gl: WebGL2RenderingContext): WebGLFramebuffer {\n  const fb = gl.createFramebuffer();\n  if (fb == null) {\n    throw new Error('Could not create framebuffer');\n  }\n  return fb;\n}\n\nexport function drawTextureProgram(\n    gl: WebGL2RenderingContext, flipHorizontal: boolean, flipVertical: boolean,\n    rotation: Rotation): ProgramObjects {\n  if (!programCacheByContext.has(gl)) {\n    programCacheByContext.set(gl, new Map());\n  }\n  const programCache = programCacheByContext.get(gl);\n\n  const cacheKey = `drawTexture_${flipHorizontal}_${flipVertical}_${rotation}`;\n  if (!programCache.has(cacheKey)) {\n    const vertSource = drawTextureProgramInfo.vertexShaderSource(\n        flipHorizontal, flipVertical, rotation);\n    const fragSource = drawTextureProgramInfo.fragmentShaderSource();\n\n    const vertices = drawTextureProgramInfo.vertices();\n    const texCoords = drawTextureProgramInfo.texCoords();\n\n    const programObjects =\n        createProgramObjects(gl, vertSource, fragSource, vertices, texCoords);\n\n    programCache.set(cacheKey, programObjects);\n  }\n  return programCache.get(cacheKey);\n}\n\nfunction resizeProgram(\n    gl: WebGL2RenderingContext, sourceDims: Dimensions, targetDims: Dimensions,\n    alignCorners: boolean,\n    interpolation: 'nearest_neighbor'|'bilinear'): ProgramObjects {\n  if (!programCacheByContext.has(gl)) {\n    programCacheByContext.set(gl, new Map());\n  }\n  const programCache = programCacheByContext.get(gl);\n\n  const cacheKey = `resize_${sourceDims.width}_${sourceDims.height}_${\n      sourceDims.depth}_${targetDims.width}_${targetDims.height}_${\n      targetDims.depth}_${alignCorners}_${interpolation}`;\n\n  if (!programCache.has(cacheKey)) {\n    const vertSource = resizeNNProgramInfo.vertexShaderSource();\n    let fragSource: string;\n    if (interpolation === 'nearest_neighbor') {\n      fragSource = resizeNNProgramInfo.fragmentShaderSource(\n          sourceDims, targetDims, alignCorners);\n    } else {\n      fragSource = resizeBilinearProgramInfo.fragmentShaderSource(\n          sourceDims, targetDims, alignCorners);\n    }\n\n    const vertices = resizeNNProgramInfo.vertices();\n    const texCoords = resizeNNProgramInfo.texCoords();\n    const programObjects =\n        createProgramObjects(gl, vertSource, fragSource, vertices, texCoords);\n\n    programCache.set(cacheKey, programObjects);\n  }\n  return programCache.get(cacheKey);\n}\n\nfunction createProgramObjects(\n    gl: WebGL2RenderingContext, vertexShaderSource: string,\n    fragmentShaderSource: string, vertices: Float32Array,\n    texCoords: Float32Array): ProgramObjects {\n  const vertShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertShader, vertexShaderSource);\n  gl.compileShader(vertShader);\n\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragShader, fragmentShaderSource);\n  gl.compileShader(fragShader);\n\n  const program = gl.createProgram();\n  gl.attachShader(program, vertShader);\n  gl.attachShader(program, fragShader);\n  gl.linkProgram(program);\n  gl.validateProgram(program);\n\n  // Use a vertex array objects to record geometry info\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  // Set up geometry\n  webgl_util.callAndCheck(gl, () => {\n    const positionAttrib = gl.getAttribLocation(program, 'position');\n    const vertsCoordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertsCoordsBuffer);\n    gl.enableVertexAttribArray(positionAttrib);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionAttrib, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  });\n\n  webgl_util.callAndCheck(gl, () => {\n    const texCoordsAttrib = gl.getAttribLocation(program, 'texCoords');\n    const texCoordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, texCoords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordsAttrib);\n    gl.vertexAttribPointer(texCoordsAttrib, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  });\n\n  const uniformLocations = new Map<string, WebGLUniformLocation>();\n  webgl_util.callAndCheck(gl, () => {\n    const inputTextureLoc = gl.getUniformLocation(program, 'inputTexture');\n    uniformLocations.set('inputTexture', inputTextureLoc);\n  });\n\n  // Unbind\n  gl.bindVertexArray(null);\n  return {\n    program,\n    vao,\n    vertices,\n    uniformLocations,\n  };\n}\n"]}